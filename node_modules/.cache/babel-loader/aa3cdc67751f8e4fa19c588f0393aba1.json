{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\8Eighth Semester\\\\BLN\\\\Project\\\\now-ui-kit-react-master\\\\src\\\\views\\\\examples\\\\Test.js\";\nimport React, { Component, state } from \"react\"; // reactstrap components\n\nimport { Button, Input, Container, Form, Table } from \"reactstrap\";\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nfunction Test() {\n  React.state = {\n    ipfsHash: null,\n    buffer: '',\n    ethAddress: '',\n    blockNumber: '',\n    transactionHash: '',\n    gasUsed: '',\n    txReceipt: ''\n  };\n\n  captureFile = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => this.convertToBuffer(reader);\n  };\n\n  convertToBuffer = async reader => {\n    //file is converted to a buffer to prepare for uploading to IPFS\n    const buffer = await Buffer.from(reader.result); //set this buffer -using es6 syntax\n\n    this.setState({\n      buffer\n    });\n  };\n\n  onClickF = async () => {\n    try {\n      this.setState({\n        blockNumber: \"waiting..\"\n      });\n      this.setState({\n        gasUsed: \"waiting...\"\n      }); // get Transaction Receipt in console on click\n      // See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n\n      await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n        console.log(err, txReceipt);\n        this.setState({\n          txReceipt\n        });\n      }); //await for getTransactionReceipt\n\n      await this.setState({\n        blockNumber: this.state.txReceipt.blockNumber\n      });\n      await this.setState({\n        gasUsed: this.state.txReceipt.gasUsed\n      });\n    } //try\n    catch (error) {\n      console.log(error);\n    } //catch\n\n  }; //onClick\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \" Choose file to send to IPFS \"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: this.onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: this.captureFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, \"Send it\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: this.onClickF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \" Get Transaction Receipt \"), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Tx Receipt Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Values\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"IPFS Hash # stored on Eth Contract\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, this.state.ipfsHash)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Ethereum Contract Address\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, this.state.ethAddress)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Tx Hash # \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, this.state.transactionHash)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Block Number # \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, this.state.blockNumber)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Gas Used\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, this.state.gasUsed)))))));\n}\n\nexport default Test;","map":{"version":3,"sources":["D:/University/8Eighth Semester/BLN/Project/now-ui-kit-react-master/src/views/examples/Test.js"],"names":["React","Component","state","Button","Input","Container","Form","Table","web3","ipfs","storehash","Test","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","onClickF","eth","getTransactionReceipt","err","console","log","error","onSubmit"],"mappings":"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","sourcesContent":["import React,{ Component,state }  from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Input,\r\n  Container,\r\n  Form,\r\n  Table\r\n} from \"reactstrap\";\r\nimport web3 from './web3';\r\nimport ipfs from './ipfs';\r\nimport storehash from './storehash';\r\n\r\nfunction Test() {\r\n\r\n    React.state = {\r\n        ipfsHash:null,\r\n        buffer:'',\r\n        ethAddress:'',\r\n        blockNumber:'',\r\n        transactionHash:'',\r\n        gasUsed:'',\r\n        txReceipt: ''   \r\n      };\r\n     \r\n      captureFile =(event) => {\r\n          event.stopPropagation()\r\n          event.preventDefault()\r\n          const file = event.target.files[0]\r\n          let reader = new window.FileReader()\r\n          reader.readAsArrayBuffer(file)\r\n          reader.onloadend = () => this.convertToBuffer(reader)    \r\n        };\r\n  \r\n      convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer to prepare for uploading to IPFS\r\n          const buffer = await Buffer.from(reader.result);\r\n        //set this buffer -using es6 syntax\r\n          this.setState({buffer});\r\n      };\r\n  \r\n      onClickF = async () => {\r\n  \r\n      try{\r\n          this.setState({blockNumber:\"waiting..\"});\r\n          this.setState({gasUsed:\"waiting...\"});\r\n  \r\n          // get Transaction Receipt in console on click\r\n          // See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\r\n          await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\r\n            console.log(err,txReceipt);\r\n            this.setState({txReceipt});\r\n          }); //await for getTransactionReceipt\r\n  \r\n          await this.setState({blockNumber: this.state.txReceipt.blockNumber});\r\n          await this.setState({gasUsed: this.state.txReceipt.gasUsed});    \r\n        } //try\r\n      catch(error){\r\n          console.log(error);\r\n        } //catch\r\n    }; //onClick\r\n  \r\n\r\n      return (\r\n        <>\r\n         <div className=\"App\">\r\n          <hr />\r\n        <Container>\r\n          <h3> Choose file to send to IPFS </h3>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <input \r\n              type = \"file\"\r\n              onChange = {this.captureFile}\r\n            />\r\n             <Button \r\n             variant=\"success\"\r\n             type=\"submit\"> \r\n             Send it \r\n             </Button>\r\n          </Form>\r\n          <hr/>\r\n            <Button onClick = {this.onClickF}> Get Transaction Receipt </Button>\r\n              <Table bordered responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Tx Receipt Category</th>\r\n                    <th>Values</th>\r\n                  </tr>\r\n                </thead>\r\n               \r\n                <tbody>\r\n                  <tr>\r\n                    <td>IPFS Hash # stored on Eth Contract</td>\r\n                    <td>{this.state.ipfsHash}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Ethereum Contract Address</td>\r\n                    <td>{this.state.ethAddress}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Tx Hash # </td>\r\n                    <td>{this.state.transactionHash}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Block Number # </td>\r\n                    <td>{this.state.blockNumber}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Gas Used</td>\r\n                    <td>{this.state.gasUsed}</td>\r\n                  </tr>                \r\n                </tbody>\r\n            </Table>\r\n        </Container>\r\n     </div>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}