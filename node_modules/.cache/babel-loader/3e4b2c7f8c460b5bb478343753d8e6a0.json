{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\8Eighth Semester\\\\BLN\\\\Project\\\\now-ui-kit-react-master\\\\src\\\\views\\\\App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport Web3 from 'web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash'; //header\n//Setting Web3\n\nconst web3 = new Web3(window.web3.currentProvider);\n\nclass App extends Component {\n  constructor() {\n    const [firstFocus, setFirstFocus] = React.useState(false);\n    const [lastFocus, setLastFocus] = React.useState(false);\n    const [emailFocus, setEmailFocus] = React.useState(false);\n  }\n\n  //onSubmit \n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \" Choose file to send to IPFS \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.captureFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }\n    }, \"Send it\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \" Get Transaction Receipt \"), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Tx Receipt Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Values\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"IPFS Hash # stored on Eth Contract\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, this.state.ipfsHash)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Ethereum Contract Address\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, this.state.ethAddress)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Tx Hash # \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, this.state.transactionHash)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, \"Block Number # \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, this.state.blockNumber)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Gas Used\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, this.state.gasUsed))))));\n  } //render\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/University/8Eighth Semester/BLN/Project/now-ui-kit-react-master/src/views/App.js"],"names":["Table","Container","Button","Form","React","Component","Web3","ipfs","storehash","web3","window","currentProvider","App","constructor","firstFocus","setFirstFocus","useState","lastFocus","setLastFocus","emailFocus","setEmailFocus","render","onSubmit","captureFile","onClick","state","ipfsHash","ethAddress","transactionHash","blockNumber","gasUsed"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\n//import logo from './logo.svg';\nimport Web3 from 'web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n//header\n//Setting Web3\nconst web3 = new Web3(window.web3.currentProvider);\nclass App extends Component {\n \n  constructor()\n  {\n  const [firstFocus, setFirstFocus] = React.useState(false);\n  const [lastFocus, setLastFocus] = React.useState(false);\n  const [emailFocus, setEmailFocus] = React.useState(false);\n  }\n    state = {\n      ipfsHash:null,\n      buffer:'',\n      ethAddress:'',\n      blockNumber:'',\n      transactionHash:'',\n      gasUsed:'',\n      txReceipt: ''   \n    };\n   \n    captureFile =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)    \n      };\n\n    convertToBuffer = async(reader) => {\n      //file is converted to a buffer to prepare for uploading to IPFS\n        const buffer = await Buffer.from(reader.result);\n      //set this buffer -using es6 syntax\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n\n    try{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting...\"});\n\n        // get Transaction Receipt in console on click\n        // See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n          console.log(err,txReceipt);\n          this.setState({txReceipt});\n        }); //await for getTransactionReceipt\n\n        await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});    \n      } //try\n    catch(error){\n        console.log(error);\n      } //catch\n  } //onClick\n\n    onSubmit = async (event) => {\n      event.preventDefault();\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            \n                 //bring in user's metamask account address\n                const accounts = await web3.eth.getAccounts();\n              \n                console.log('Sending from Metamask account: ' + accounts[0]);\n\n                //obtain contract address from storehash.js\n                const ethAddress= await storehash.options.address;\n                this.setState({ethAddress});\n\n                //save document to IPFS,return its hash#, and set hash# to state\n                //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n                await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n                  console.log(err,ipfsHash);\n                  //setState by setting ipfsHash to ipfsHash[0].hash \n                  this.setState({ ipfsHash:ipfsHash[0].hash });\n\n                  // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract \n                  //return the transaction hash from the ethereum contract\n                  //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n                  \n                  storehash.methods.sendHash(this.state.ipfsHash*10000000000).send({\n                    from: accounts[0] \n                  }, (error, transactionHash) => {\n                    console.log(transactionHash);\n                    this.setState({transactionHash});\n                  }); //storehash \n                }) //await ipfs.add \n\n\n        } catch (error) {\n            alert(\"Permission to Access MetaMask Denied\");\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(web3.currentProvider);\n        // Acccounts always exposed\n        web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n\n      \n    }; //onSubmit \n  \n    render() {\n      \n      return (\n        <div className=\"App\">\n          <hr />\n        <Container>\n          <h3> Choose file to send to IPFS </h3>\n          <Form onSubmit={this.onSubmit}>\n            <input \n              type = \"file\"\n              onChange = {this.captureFile}\n            />\n             <Button \n             variant=\"success\"\n             type=\"submit\"> \n             Send it \n             </Button>\n          </Form>\n          <hr/>\n            <Button onClick = {this.onClick}> Get Transaction Receipt </Button>\n              <Table bordered responsive>\n                <thead>\n                  <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n               \n                <tbody>\n                  <tr>\n                    <td>IPFS Hash # stored on Eth Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Block Number # </td>\n                    <td>{this.state.blockNumber}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                  </tr>                \n                </tbody>\n            </Table>\n        </Container>\n     </div>\n      );\n    } //render\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}