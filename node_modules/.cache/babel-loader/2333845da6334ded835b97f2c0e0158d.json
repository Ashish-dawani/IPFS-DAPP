{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\8Eighth Semester\\\\BLN\\\\Project\\\\now-ui-kit-react-master\\\\src\\\\views\\\\App.js\";\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardTitle, Form, Input, Table, InputGroupAddon, InputGroupText, InputGroup, Container, Row } from \"reactstrap\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; //import logo from './logo.svg';\n\nimport Web3 from 'web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash'; //header\n//Setting Web3\n\nconst web3 = new Web3(window.web3.currentProvider);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let value = event.target.value,\n          message;\n      message = value.split('\\\\').pop();\n      if (message) this.setState({ ...this.state,\n        message\n      });\n      let reader = new window.FileReader();\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n\n      reader.readAsArrayBuffer(file);\n    };\n\n    this.convertToBuffer = async reader => {\n      //file is converted to a buffer to prepare for uploading to IPFS\n      const buffer = await Buffer.from(reader.result); //set this buffer -using es6 syntax\n\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting..\"\n        });\n        this.setState({\n          gasUsed: \"waiting...\"\n        }); // get Transaction Receipt in console on click\n        // See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({\n            txReceipt\n          });\n        }); //await for getTransactionReceipt\n\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.state.txReceipt.gasUsed\n        });\n      } //try\n      catch (error) {\n        console.log(error);\n      } //catch\n\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n\n        try {\n          // Request account access if needed\n          await window.ethereum.enable(); // Acccounts now exposed\n          //bring in user's metamask account address\n\n          const accounts = await web3.eth.getAccounts();\n          console.log('Sending from Metamask account: ' + accounts[0]); //obtain contract address from storehash.js\n\n          const ethAddress = await storehash.options.address;\n          this.setState({\n            ethAddress\n          }); //save document to IPFS,return its hash#, and set hash# to state\n          //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n\n          await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err, ipfsHash); //setState by setting ipfsHash to ipfsHash[0].hash \n\n            this.setState({\n              ipfsHash: ipfsHash[0].hash\n            }); // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract \n            //return the transaction hash from the ethereum contract\n            //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n\n            storehash.methods.sendHash(this.state.ipfsHash * 10000000000).send({\n              from: accounts[0]\n            }, (error, transactionHash) => {\n              console.log(transactionHash);\n              this.setState({\n                transactionHash\n              });\n            }); //storehash \n          }); //await ipfs.add \n        } catch (error) {\n          alert(\"Permission to Access MetaMask Denied\");\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n          window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n          web3.eth.sendTransaction({\n            /* ... */\n          });\n        } // Non-dapp browsers...\n        else {\n            console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n          }\n    };\n\n    this.state = {\n      message: 'Choose File...'\n    };\n  }\n\n  //onSubmit \n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-signup\",\n      \"data-background-color\": \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      action: \"\",\n      className: \"form form-group\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"title-up\",\n      tag: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-neutral btn-icon btn-round\",\n      color: \"github\",\n      href: \"#\",\n      onClick: e => e.preventDefault(),\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fab fa-github\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      \"text-align\": \"center\",\n      style: {\n        \"width\": \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      className: \"form-control\",\n      onChange: this.captureFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-neutral btn-round\",\n      color: \"info\",\n      type: \"submit\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, \"Upload Now.\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \" Get Transaction Receipt \"), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Tx Receipt Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"Values\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"IPFS Hash # stored on Eth Contract\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, this.state.ipfsHash)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"Ethereum Contract Address\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, this.state.ethAddress)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"Tx Hash # \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, this.state.transactionHash)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"Block Number # \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, this.state.blockNumber)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"Gas Used\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, this.state.gasUsed))))));\n  } //render\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/University/8Eighth Semester/BLN/Project/now-ui-kit-react-master/src/views/App.js"],"names":["Button","Card","CardHeader","CardBody","CardFooter","CardTitle","Form","Input","Table","InputGroupAddon","InputGroupText","InputGroup","Container","Row","React","Component","Link","Web3","ipfs","storehash","web3","window","currentProvider","App","constructor","props","state","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","captureFile","event","stopPropagation","preventDefault","file","target","files","value","message","split","pop","setState","reader","FileReader","onloadend","convertToBuffer","readAsArrayBuffer","Buffer","from","result","onClick","eth","getTransactionReceipt","err","console","log","error","onSubmit","ethereum","enable","accounts","getAccounts","options","address","add","hash","methods","sendHash","send","alert","sendTransaction","render","e"],"mappings":"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","sourcesContent":["\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Form,\n  Input,\n  Table,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row\n} from \"reactstrap\";\nimport React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n//import logo from './logo.svg';\nimport Web3 from 'web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n//header\n//Setting Web3\nconst web3 = new Web3(window.web3.currentProvider);\nclass App extends Component {\n  \n  constructor(props)\n  {\n    super(props);\n    this.state = {message:'Choose File...'};\n  }\n  \n    state = {\n      ipfsHash:null,\n      buffer:'',\n      ethAddress:'',\n      blockNumber:'',\n      transactionHash:'',\n      gasUsed:'',\n      txReceipt: ''   \n    };\n   \n    captureFile =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let  value = event.target.value,\n        message;\n        message = value.split( '\\\\' ).pop();\n        if(message) this.setState({...this.state,message});\n        let reader = new window.FileReader()\n        reader.onloadend = () => this.convertToBuffer(reader)    \n        reader.readAsArrayBuffer(file)\n      };\n\n    convertToBuffer = async(reader) => {\n      //file is converted to a buffer to prepare for uploading to IPFS\n        const buffer = await Buffer.from(reader.result);\n      //set this buffer -using es6 syntax\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n\n    try{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting...\"});\n\n        // get Transaction Receipt in console on click\n        // See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n          console.log(err,txReceipt);\n          this.setState({txReceipt});\n        }); //await for getTransactionReceipt\n\n        await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});    \n      } //try\n    catch(error){\n        console.log(error);\n      } //catch\n  } //onClick\n\n    onSubmit = async (event) => {\n      event.preventDefault();\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            \n                 //bring in user's metamask account address\n                const accounts = await web3.eth.getAccounts();\n              \n                console.log('Sending from Metamask account: ' + accounts[0]);\n\n                //obtain contract address from storehash.js\n                const ethAddress= await storehash.options.address;\n                this.setState({ethAddress});\n\n                //save document to IPFS,return its hash#, and set hash# to state\n                //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n                await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n                  console.log(err,ipfsHash);\n                  //setState by setting ipfsHash to ipfsHash[0].hash \n                  this.setState({ ipfsHash:ipfsHash[0].hash });\n\n                  // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract \n                  //return the transaction hash from the ethereum contract\n                  //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n                  \n                  storehash.methods.sendHash(this.state.ipfsHash*10000000000).send({\n                    from: accounts[0] \n                  }, (error, transactionHash) => {\n                    console.log(transactionHash);\n                    this.setState({transactionHash});\n                  }); //storehash \n                }) //await ipfs.add \n\n\n        } catch (error) {\n            alert(\"Permission to Access MetaMask Denied\");\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(web3.currentProvider);\n        // Acccounts always exposed\n        web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n\n      \n    }; //onSubmit \n  \n    render() {\n      \n      return (\n        <div>\n        <Container>\n          <Row>\n            <Card className=\"card-signup\" data-background-color=\"blue\">\n              <Form action=\"\" className=\"form form-group\" onSubmit={this.onSubmit}>\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"title-up\" tag=\"h3\">\n                    Sign Up\n                  </CardTitle>\n                  <div className=\"social-line\">\n                    <Button\n                      className=\"btn-neutral btn-icon btn-round\"\n                      color=\"github\"\n                      href=\"#\"\n                      onClick={e => e.preventDefault()}\n                      size=\"lg\"\n                    >\n                      <i className=\"fab fa-github\"></i>\n                    </Button>\n            \n                  \n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <InputGroup>\n                    <InputGroupText text-align=\"center\" style={{\"width\" : \"100%\"}}>\n                    {this.state.message}\n                      </InputGroupText>\n                    <Input\n                      type=\"file\"\n                      className=\"form-control\"\n                      onChange = {this.captureFile}\n                    ></Input>\n                  </InputGroup>\n                </CardBody>\n                <CardFooter className=\"text-center\">\n                  <Button\n                    className=\"btn-neutral btn-round\"\n                    color=\"info\"\n                    type=\"submit\"\n                    size=\"lg\"\n                  >\n                    Upload Now.\n                  </Button>\n                </CardFooter>\n              </Form>\n            </Card>\n          </Row>\n          <hr/>\n            <Button onClick = {this.onClick}> Get Transaction Receipt </Button>\n              <Table bordered responsive>\n                <thead>\n                  <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n               \n                <tbody>\n                  <tr>\n                    <td>IPFS Hash # stored on Eth Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Block Number # </td>\n                    <td>{this.state.blockNumber}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                  </tr>                \n                </tbody>\n            </Table>\n        </Container>\n    </div>\n      );\n    } //render\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}